test content for git tutorial
<<<<<<< HEAD
Command
Description
git push origin [branch name]
Push a branch to your remote repository
git push -u origin [branch name]
Push changes to remote repository (and remember the branch)
git push
Push changes to remote repository (remembered branch)
git push origin --delete [branch name]
Delete a remote branch
git pull
Update local repository to the newest commit
git pull origin [branch name]
Pull changes from remote repository
git remote add origin ssh://git@github.com/[username]/[repository-name].git
Add a remote repository
git remote set-url origin ssh://git@github.com/[username]/[repository-name].git
=======


git clone --bare
Similar to git init --bare, when the -bare argument is passed to git clone, 
a copy of the remote repository will be made with an omitted working directory.
 This means that a repository will be set up with the history of the project that 
can be pushed and pulled from, but cannot be edited directly. In addition, no remote 
branches for the repo will be configured with the -bare repository. 
Like git init --bare, this is used to create a hosted repository that developers will not edit directly.
git clone --mirror

Passing the --mirror argument implicitly passes the --bare argument as well.
 This means the behavior of --bare is inherited by --mirror. Resulting in a bare 
repo with no editable working files. In addition, --mirror will clone all the 
extended refs of the remote repository, and maintain remote branch tracking configuration. 
You can then run git remote update on the mirror and it will overwrite all refs from the origin repo.
 Giving you exact 'mirrored' functionality.
>>>>>>> ae2c8c681739b3af06c82ccccb7b4537cc3402a3



jfrdt


























tetds
